[gd_scene load_steps=5 format=2]

[sub_resource type="PlaneMesh" id=1]


[sub_resource type="Shader" id=2]

code = "shader_type spatial;
// These flags affect the #defines that are used in the GLES3 scene uber shader.
render_mode blend_mix,cull_back;
uniform vec4 albedo : hint_color;

void fragment() {
	ALBEDO = vec3(0.0, 0.0, 0.0);
	ALPHA = 0.5; // Make sure Godot sends this through the transparent rendering path.
}

void light() {
	DIFFUSE_LIGHT = DIFFUSE_LIGHT;
	//ALBEDO = vec3(1.0, 1.0, 1.0);
	ALPHA = clamp(1.0 - length(ATTENUATION), 0.0, 1.0) * 0.75;
	if (ALPHA < 0.1) {
		discard;
	}
}
"

[sub_resource type="ShaderMaterial" id=3]

shader = SubResource( 2 )
shader_param/albedo = null

[sub_resource type="CubeMesh" id=5]


[node name="Main" type="Spatial"]

[node name="Ground" type="MeshInstance" parent="."]
transform = Transform( 10, 0, 0, 0, 10, 0, 0, 0, 10, 0, 0, 0 )
mesh = SubResource( 1 )
material/0 = SubResource( 3 )

[node name="Cube" type="MeshInstance" parent="."]
transform = Transform( 1, 0, 0, 0, -0.9953, 0.0968359, 0, -0.0968359, -0.9953, -0.0557785, 3.06108, 0 )
mesh = SubResource( 5 )
material/0 = null

[node name="DirectionalLight" type="DirectionalLight" parent="."]
transform = Transform( 0.964496, -0.264097, 0, 0.11251, 0.410894, 0.904714, -0.238932, -0.872593, 0.426019, 0, 10.0743, 0 )
shadow_enabled = true

[node name="Camera" type="Camera" parent="."]
transform = Transform( 0.116577, -0.654043, 0.747421, 0, 0.752552, 0.658533, -0.993182, -0.0767701, 0.0877306, 7.47524, 11.2357, 0 )

